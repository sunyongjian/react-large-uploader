{"version":3,"sources":["../src/upload.jsx"],"names":["uploadStatusConfig","init","btn","clickName","barClassName","md5","process","done","error","currying","fn","ahead","behind","LargeUploader","setFileItem","key","value","id","Promise","resolve","fileList","state","copy","result","filter","item","length","setState","setUploadStatus","handleBeforeFileQueued","beforeFileQueued","props","file","handleFileQueued","auto","options","percentage","uploadStatus","uploader","md5File","progress","then","val","upload","handleBeforeSend","block","data","md5Val","chunks","fillDataBeforeSend","v","Object","assign","chunk","md5Value","handleUploadProgress","handleUploadAccept","ret","uploadResponse","handleUploadError","reason","onChange","handleUploadSuccess","res","response","_raw","retry","getFile","deleteFile","index","findIndex","curFile","splice","removeFile","create","chunked","chunkSize","pick","chunkRetry","threads","fileSizeLimit","fileSingleSizeLimit","on","map","name","width","children","border","style","renderFileList","Component","defaultProps","propTypes","object","func","number","bool","element"],"mappings":"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","file":"upload.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'expose-loader?$!expose-loader?jQuery!jquery';\nimport WebUploader from '../web/webuploader.nolog.min';\n\nconst uploadStatusConfig = {\n  init: {\n    btn: '开始上传',\n    clickName: 'upload',\n    barClassName: 'process-bar',\n  },\n  md5: {\n    btn: '计算md5中...',\n    barClassName: 'process-bar',\n  },\n  process: {\n    btn: '上传中 ...',\n    barClassName: 'process-bar',\n  },\n  done: {\n    btn: '上传完成',\n    barClassName: 'process-bar success-bar',\n  },\n  error: {\n    btn: '继续上传',\n    clickName: 'retry',\n    barClassName: 'process-bar error-bar',\n  },\n};\n\nconst currying = (fn, ...ahead) => (...behind) => fn(...ahead, ...behind);\n\nexport default class LargeUploader extends React.Component {\n  static defaultProps = {\n    options: {},\n    onChange: () => {},\n    width: 300,\n    border: true,\n    children: <div className=\"btn-primary\" >选择文件</div>,\n    beforeFileQueued: () => true,\n    fillDataBeforeSend: () => ({}),\n    uploadResponse: () => true,\n  }\n\n  static propTypes = {\n    options: PropTypes.object,\n    onChange: PropTypes.func,\n    width: PropTypes.number,\n    border: PropTypes.bool,\n    children: PropTypes.element,\n    beforeFileQueued: PropTypes.func,\n    fillDataBeforeSend: PropTypes.func,\n    uploadResponse: PropTypes.func,\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      fileList: [],\n    };\n  }\n\n  componentDidMount() {\n    const { options } = this.props;\n    const uploader = WebUploader.create({\n      chunked: true,\n      chunkSize: 5 * 1024 * 1024,\n      pick: '#picker',\n      chunkRetry: 3,\n      threads: 1,\n      fileSizeLimit: 2000 * 1024 * 1024,\n      fileSingleSizeLimit: 2000 * 1024 * 1024,\n      ...options,\n      auto: false,\n    });\n    uploader.on('beforeFileQueued', this.handleBeforeFileQueued);\n    uploader.on('fileQueued', this.handleFileQueued);\n    uploader.on('uploadBeforeSend', this.handleBeforeSend);\n    uploader.on('uploadProgress', this.handleUploadProgress);\n    uploader.on('uploadAccept', this.handleUploadAccept);\n    uploader.on('uploadError', this.handleUploadError);\n    uploader.on('uploadSuccess', this.handleUploadSuccess);\n    this.uploader = uploader;\n  }\n\n  setFileItem = (key, value, id) => {\n    return new Promise((resolve) => {\n      const { fileList } = this.state;\n      const copy = [...fileList];\n      const result = copy.filter(item => item.id === id);\n      if (result.length) {\n        result[0][key] = value;\n        this.setState({\n          fileList: copy,\n        }, () => { resolve(); });\n      }\n    });\n  }\n\n  setUploadStatus = currying(this.setFileItem, 'uploadStatus')\n\n  handleBeforeFileQueued = file => {\n    const { beforeFileQueued } = this.props;\n    return beforeFileQueued(file);\n  }\n\n  handleFileQueued = file => {\n    const { fileList } = this.state;\n    const { options: { auto } } = this.props;\n    file.percentage = 0;\n    file.uploadStatus = 'md5';\n    this.uploader.md5File(file)\n      .progress(() => {\n        this.setUploadStatus('md5', file.id);\n      })\n      // 完成\n      .then((val) => {\n        this.setUploadStatus('init', file.id);\n        this.setFileItem('md5Val', val, file.id);\n        if (auto && file.uploadStatus !== 'done') this.uploader.upload(file, file.id);\n      });\n    this.setState({\n      fileList: [...fileList, file],\n    });\n  }\n\n  handleBeforeSend = (block, data) => {\n    const { file: { md5Val, id }, chunks } = block;\n    const { fillDataBeforeSend } = this.props;\n    const v = fillDataBeforeSend();\n    Object.assign(data, v);\n    if (chunks === 1) { // 未切片的加入默认值\n      data.chunks = 1;\n      data.chunk = 0;\n    }\n    // data 中 加入 md5 值\n    data.md5Value = md5Val;\n    this.setUploadStatus('process', id);\n  }\n\n  handleUploadProgress = (file, percentage) => {\n    this.setFileItem('percentage', percentage, file.id);\n  }\n\n  handleUploadAccept = (file, ret) => {\n    const { uploadResponse } = this.props;\n    return uploadResponse(file, ret);\n  }\n\n  handleUploadError = (file, reason) => {\n    file.error = reason;\n    this.setUploadStatus('error', file.id).then(() => {\n      this.props.onChange(file, this.state.fileList);\n    });\n  }\n\n  handleUploadSuccess = (file, res) => {\n    file.response = res._raw;\n    this.setUploadStatus('done', file.id).then(() => {\n      this.props.onChange(file, this.state.fileList);\n    });\n  }\n\n  upload = (id) => () => {\n    this.uploader.upload(id);\n  }\n\n  retry = (id) => () => {\n    this.setUploadStatus('process', id);\n    this.uploader.retry(this.uploader.getFile(id));\n  }\n\n  deleteFile = (id) => () => {\n    const { fileList } = this.state;\n    const index = fileList.findIndex((item) => item.id === id);\n    const curFile = fileList[index];\n    fileList.splice(index, 1);\n    this.setState({\n      fileList,\n    }, () => {\n      this.props.onChange(curFile, this.state.fileList);\n    });\n    this.uploader.removeFile(this.uploader.getFile(id, true));\n  }\n\n  renderFileList() {\n    const { fileList } = this.state;\n    return fileList.map((item) => {\n      const { id, name, percentage, uploadStatus } = item;\n      const { clickName, btn, barClassName } = uploadStatusConfig[uploadStatus];\n      return (\n        <div key={id} className=\"file-item\" >\n          <span className=\"file-name\">{name}</span>\n          <span className={`file-status ${uploadStatus}-status`} onClick={this[clickName] ? this[clickName](id) : null}>{btn}</span>\n          <span className=\"delete\" onClick={this.deleteFile(id)}>x</span>\n          <div className=\"process\">\n            <div className={barClassName} style={{ width: `${percentage * 100}%` }} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { children, border, width } = this.props;\n    const style = border ? { width } : { width, border: 'none' };\n    return (<div>\n      <div className=\"large-uploader\" style={style}>\n        <div className=\"file-list\">\n          {this.renderFileList()}\n        </div>\n        <div className=\"content\" >\n          <div id=\"picker\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>);\n  }\n}\n"]}